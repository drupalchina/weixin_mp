<?php

/**
 * Implements hook_menu().
 */
function weixin_mp_menu(){
  $items['weixin'] = array(
    'title' => '微信公众平台',
    'description' => '微信公众平台',
    'page callback' => 'weixin_mp_callback_page',
    'file' => 'weixin_mp.pages.inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu', //指定menu
    'weight' => 10,
    //'type' => MENU_CALLBACK,
  );
  
  $items['admin/config/services/weixin_mp'] = array(
    'title' => 'Weixin MP API',
    'description' => 'Configure the weixin access token.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('weixin_mp_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'weixin_mp.admin.inc',
  );
  
  return $items;
}

/*
class wechatCallbackapiTest
{
  public function valid($token) {
    $echoStr = $_GET["echostr"];

    //valid signature , option
    if($this->checkSignature($token)){
      echo $echoStr;
      exit;
    }
  }

  public function responseMsg($contentStr) {
    //get post data, May be due to the different environments
    $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];

    //extract post data
    if (!empty($postStr)){

      $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);
      $fromUsername = $postObj->FromUserName;
      $toUsername = $postObj->ToUserName;
      $keyword = trim($postObj->Content);
      $time = time();
      $textTpl = "<xml>
                  <ToUserName><![CDATA[%s]]></ToUserName>
                  <FromUserName><![CDATA[%s]]></FromUserName>
                  <CreateTime>%s</CreateTime>
                  <MsgType><![CDATA[%s]]></MsgType>
                  <Content>%s</Content>
                  <FuncFlag>0</FuncFlag>
                  </xml>";             
      if(!empty( $keyword )) {
        $msgType = "text";
        //$contentStr = "Welcome to CG!";
        $resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);
        echo $resultStr;
      }
      else{
        echo "Input something...";
      }
    }
    else {
      echo "";
      exit;
    }
  }

  private function checkSignature($token) {
    $signature = $_GET["signature"];
    $timestamp = $_GET["timestamp"];
    $nonce = $_GET["nonce"];	
    
    $tmpArr = array($token, $timestamp, $nonce);
    sort($tmpArr);
    $tmpStr = implode( $tmpArr );
    $tmpStr = sha1( $tmpStr );

    if( $tmpStr == $signature ) {
      return true;
    }
    else{
      return false;
    }
  }
}
*/